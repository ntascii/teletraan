{
	"info": {
		"_postman_id": "8be72625-9319-4d16-b6d2-b4c4a23ee558",
		"name": "deploy-service-api-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21469645"
	},
	"item": [
		{
			"name": "Deploys",
			"item": [
				{
					"name": "search",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/deploys?envId=<string>&envId=<string>&operator=<string>&operator=<string>&deployType=<string>&deployType=<string>&deployState=<string>&deployState=<string>&acceptanceStatus=<string>&acceptanceStatus=<string>&commit=<string>&repo=<string>&branch=<string>&commitDate=<long>&before=<long>&after=<long>&pageIndex=<integer>&pageSize=<integer>&oldestFirst=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"deploys"
							],
							"query": [
								{
									"key": "envId",
									"value": "<string>"
								},
								{
									"key": "envId",
									"value": "<string>"
								},
								{
									"key": "operator",
									"value": "<string>"
								},
								{
									"key": "operator",
									"value": "<string>"
								},
								{
									"key": "deployType",
									"value": "<string>"
								},
								{
									"key": "deployType",
									"value": "<string>"
								},
								{
									"key": "deployState",
									"value": "<string>"
								},
								{
									"key": "deployState",
									"value": "<string>"
								},
								{
									"key": "acceptanceStatus",
									"value": "<string>"
								},
								{
									"key": "acceptanceStatus",
									"value": "<string>"
								},
								{
									"key": "commit",
									"value": "<string>"
								},
								{
									"key": "repo",
									"value": "<string>"
								},
								{
									"key": "branch",
									"value": "<string>"
								},
								{
									"key": "commitDate",
									"value": "<long>"
								},
								{
									"key": "before",
									"value": "<long>"
								},
								{
									"key": "after",
									"value": "<long>"
								},
								{
									"key": "pageIndex",
									"value": "<integer>"
								},
								{
									"key": "pageSize",
									"value": "<integer>"
								},
								{
									"key": "oldestFirst",
									"value": "<boolean>"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/deploys?envId=<string>&envId=<string>&operator=<string>&operator=<string>&deployType=<string>&deployType=<string>&deployState=<string>&deployState=<string>&acceptanceStatus=<string>&acceptanceStatus=<string>&commit=<string>&repo=<string>&branch=<string>&commitDate=<long>&before=<long>&after=<long>&pageIndex=<integer>&pageSize=<integer>&oldestFirst=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"deploys"
									],
									"query": [
										{
											"key": "envId",
											"value": "<string>"
										},
										{
											"key": "envId",
											"value": "<string>"
										},
										{
											"key": "operator",
											"value": "<string>"
										},
										{
											"key": "operator",
											"value": "<string>"
										},
										{
											"key": "deployType",
											"value": "<string>"
										},
										{
											"key": "deployType",
											"value": "<string>"
										},
										{
											"key": "deployState",
											"value": "<string>"
										},
										{
											"key": "deployState",
											"value": "<string>"
										},
										{
											"key": "acceptanceStatus",
											"value": "<string>"
										},
										{
											"key": "acceptanceStatus",
											"value": "<string>"
										},
										{
											"key": "commit",
											"value": "<string>"
										},
										{
											"key": "repo",
											"value": "<string>"
										},
										{
											"key": "branch",
											"value": "<string>"
										},
										{
											"key": "commitDate",
											"value": "<long>"
										},
										{
											"key": "before",
											"value": "<long>"
										},
										{
											"key": "after",
											"value": "<long>"
										},
										{
											"key": "pageIndex",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "oldestFirst",
											"value": "<boolean>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deploys\": [\n    {\n      \"alias\": \"<string>\",\n      \"state\": \"<string>\",\n      \"operator\": \"<string>\",\n      \"description\": \"<string>\",\n      \"total\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"envId\": \"<string>\",\n      \"buildId\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"lastUpdateDate\": \"<long>\",\n      \"successTotal\": \"<integer>\",\n      \"failTotal\": \"<integer>\",\n      \"successDate\": \"<long>\",\n      \"acceptanceStatus\": \"<string>\",\n      \"fromDeployId\": \"<string>\"\n    },\n    {\n      \"alias\": \"<string>\",\n      \"state\": \"<string>\",\n      \"operator\": \"<string>\",\n      \"description\": \"<string>\",\n      \"total\": \"<integer>\",\n      \"id\": \"<string>\",\n      \"envId\": \"<string>\",\n      \"buildId\": \"<string>\",\n      \"type\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"lastUpdateDate\": \"<long>\",\n      \"successTotal\": \"<integer>\",\n      \"failTotal\": \"<integer>\",\n      \"successDate\": \"<long>\",\n      \"acceptanceStatus\": \"<string>\",\n      \"fromDeployId\": \"<string>\"\n    }\n  ],\n  \"deployTags\": {\n    \"consectetur_5d\": {\n      \"id\": \"<string>\",\n      \"value\": \"<string>\",\n      \"targetType\": \"<string>\",\n      \"targetId\": \"<string>\",\n      \"operator\": \"<string>\",\n      \"createdDate\": \"<long>\",\n      \"comments\": \"<string>\",\n      \"metaInfo\": \"<string>\"\n    },\n    \"deserunt_b2b\": {\n      \"id\": \"<string>\",\n      \"value\": \"<string>\",\n      \"targetType\": \"<string>\",\n      \"targetId\": \"<string>\",\n      \"operator\": \"<string>\",\n      \"createdDate\": \"<long>\",\n      \"comments\": \"<string>\",\n      \"metaInfo\": \"<string>\"\n    }\n  },\n  \"total\": \"<long>\",\n  \"truncated\": false\n}"
						}
					]
				},
				{
					"name": "Get deploys per day",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/deploys/dailycount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"deploys",
								"dailycount"
							]
						},
						"description": "Get total numbers of deploys on the current day"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/deploys/dailycount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"deploys",
										"dailycount"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<long>\""
						}
					]
				},
				{
					"name": "Get deploy info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/deploys/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"deploys",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "rm8pBynKR1OsemuZph8kAw",
									"description": "(Required) Deploy id"
								}
							]
						},
						"description": "Returns a deploy object given a deploy id"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/deploys/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"deploys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Deploy id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"alias\": \"<string>\",\n  \"state\": \"<string>\",\n  \"operator\": \"<string>\",\n  \"description\": \"<string>\",\n  \"total\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"envId\": \"<string>\",\n  \"buildId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdateDate\": \"<long>\",\n  \"successTotal\": \"<integer>\",\n  \"failTotal\": \"<integer>\",\n  \"successDate\": \"<long>\",\n  \"acceptanceStatus\": \"<string>\",\n  \"fromDeployId\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update deploy",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alias\": \"<string>\",\n  \"state\": \"<string>\",\n  \"operator\": \"<string>\",\n  \"description\": \"<string>\",\n  \"total\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"envId\": \"<string>\",\n  \"buildId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdateDate\": \"<long>\",\n  \"successTotal\": \"<integer>\",\n  \"failTotal\": \"<integer>\",\n  \"successDate\": \"<long>\",\n  \"acceptanceStatus\": \"<string>\",\n  \"fromDeployId\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/deploys/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"deploys",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Deploy id"
								}
							]
						},
						"description": "Update deploy given a deploy id and a deploy object. Current only acceptanceStatus and description are allowed to change."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"alias\": \"<string>\",\n  \"state\": \"<string>\",\n  \"operator\": \"<string>\",\n  \"description\": \"<string>\",\n  \"total\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"envId\": \"<string>\",\n  \"buildId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdateDate\": \"<long>\",\n  \"successTotal\": \"<integer>\",\n  \"failTotal\": \"<integer>\",\n  \"successDate\": \"<long>\",\n  \"acceptanceStatus\": \"<string>\",\n  \"fromDeployId\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/deploys/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"deploys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Deploy id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete deploy info",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/deploys/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"deploys",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Deploy id"
								}
							]
						},
						"description": "Delete deploy info given a deploy id"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/deploys/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"deploys",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Deploy id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a deploy",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys?buildId=<string>&description=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"deploys"
							],
							"query": [
								{
									"key": "buildId",
									"value": "<string>",
									"description": "(Required) Build id"
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "(Required) Description"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Creates a deploy given an environment name, stage name, build id and description"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys?buildId=<string>&description=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"deploys"
									],
									"query": [
										{
											"key": "buildId",
											"value": "<string>"
										},
										{
											"key": "description",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get deploy info by environment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys/current",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"deploys",
								"current"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Returns a deploy info object given an environment name and stage name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys/current",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"deploys",
										"current"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"alias\": \"<string>\",\n  \"state\": \"<string>\",\n  \"operator\": \"<string>\",\n  \"description\": \"<string>\",\n  \"total\": \"<integer>\",\n  \"id\": \"<string>\",\n  \"envId\": \"<string>\",\n  \"buildId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdateDate\": \"<long>\",\n  \"successTotal\": \"<integer>\",\n  \"failTotal\": \"<integer>\",\n  \"successDate\": \"<long>\",\n  \"acceptanceStatus\": \"<string>\",\n  \"fromDeployId\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Take deploy action",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys/current/actions?actionType=<string>&fromDeployId=<string>&toDeployId=<string>&description=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"deploys",
								"current",
								"actions"
							],
							"query": [
								{
									"key": "actionType",
									"value": "<string>",
									"description": "(Required) ActionType enum selection"
								},
								{
									"key": "fromDeployId",
									"value": "<string>",
									"description": "(Required) Lower bound deploy id"
								},
								{
									"key": "toDeployId",
									"value": "<string>",
									"description": "(Required) Upper bound deploy id"
								},
								{
									"key": "description",
									"value": "<string>",
									"description": "(Required) Description"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Take an action on a deploy such as RESTART or PAUSE"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys/current/actions?actionType=<string>&fromDeployId=<string>&toDeployId=<string>&description=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"deploys",
										"current",
										"actions"
									],
									"query": [
										{
											"key": "actionType",
											"value": "<string>"
										},
										{
											"key": "fromDeployId",
											"value": "<string>"
										},
										{
											"key": "toDeployId",
											"value": "<string>"
										},
										{
											"key": "description",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get missing hosts for stage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys/current/missing-hosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"deploys",
								"current",
								"missing-hosts"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Returns a list of missing hosts given an environment and stage"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys/current/missing-hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"deploys",
										"current",
										"missing-hosts"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
						}
					]
				},
				{
					"name": "Update deploy progress",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys/current/progress",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"deploys",
								"current",
								"progress"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Updates a deploy's progress given an environment name and stage name and returns a deploy progress object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys/current/progress",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"deploys",
										"current",
										"progress"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"agents\": [\n    {\n      \"hostId\": \"<string>\",\n      \"hostName\": \"<string>\",\n      \"envId\": \"<string>\",\n      \"deployId\": \"<string>\",\n      \"deployStage\": \"<string>\",\n      \"state\": \"<string>\",\n      \"status\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"lastUpdateDate\": \"<long>\",\n      \"lastOperator\": \"<string>\",\n      \"lastErrno\": \"<integer>\",\n      \"failCount\": \"<integer>\",\n      \"firstDeploy\": false,\n      \"firstDeployDate\": \"<long>\",\n      \"stageStartDate\": \"<long>\"\n    },\n    {\n      \"hostId\": \"<string>\",\n      \"hostName\": \"<string>\",\n      \"envId\": \"<string>\",\n      \"deployId\": \"<string>\",\n      \"deployStage\": \"<string>\",\n      \"state\": \"<string>\",\n      \"status\": \"<string>\",\n      \"startDate\": \"<long>\",\n      \"lastUpdateDate\": \"<long>\",\n      \"lastOperator\": \"<string>\",\n      \"lastErrno\": \"<integer>\",\n      \"failCount\": \"<integer>\",\n      \"firstDeploy\": false,\n      \"firstDeployDate\": \"<long>\",\n      \"stageStartDate\": \"<long>\"\n    }\n  ],\n  \"missingHosts\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"provisioningHosts\": [\n    {\n      \"hostName\": \"<string>\",\n      \"groupName\": \"<string>\",\n      \"ip\": \"<string>\",\n      \"hostId\": \"<string>\",\n      \"createDate\": \"<long>\",\n      \"lastUpdateDate\": \"<long>\",\n      \"state\": \"<string>\",\n      \"canRetire\": \"<integer>\"\n    },\n    {\n      \"hostName\": \"<string>\",\n      \"groupName\": \"<string>\",\n      \"ip\": \"<string>\",\n      \"hostId\": \"<string>\",\n      \"createDate\": \"<long>\",\n      \"lastUpdateDate\": \"<long>\",\n      \"state\": \"<string>\",\n      \"canRetire\": \"<integer>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Take a deploy action",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys/hostactions?actionType=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"deploys",
								"hostactions"
							],
							"query": [
								{
									"key": "actionType",
									"value": "<string>",
									"description": "(Required) Agent object to update with"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Take an action on a deploy using host information"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploys/hostactions?actionType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"deploys",
										"hostactions"
									],
									"query": [
										{
											"key": "actionType",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Deploy info APIs"
		},
		{
			"name": "Script Tokens",
			"item": [
				{
					"name": "Get environment TokenRoles objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/token_roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"token_roles"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name."
								}
							]
						},
						"description": "Returns all the TokenRoles objects for a given environment."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/token_roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"token_roles"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"role\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"type\": \"<string>\",\n    \"token\": \"<string>\",\n    \"expireDate\": \"<long>\"\n  },\n  {\n    \"role\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"type\": \"<string>\",\n    \"token\": \"<string>\",\n    \"expireDate\": \"<long>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create an environment script token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\",\n  \"token\": \"<string>\",\n  \"expireDate\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/token_roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"token_roles"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name."
								}
							]
						},
						"description": "Creates an environment script token with given environment name and TokenRoles object."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/token_roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"token_roles"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get TokenRoles object by script and environment names",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/token_roles/:scriptName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"token_roles",
								":scriptName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name."
								},
								{
									"key": "scriptName",
									"value": "<string>",
									"description": "(Required) Script name."
								}
							]
						},
						"description": "Returns a TokenRoles object given a script and environment name."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/token_roles/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"token_roles",
										":scriptName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name."
										},
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) Script name."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\",\n  \"token\": \"<string>\",\n  \"expireDate\": \"<long>\"\n}"
						}
					]
				},
				{
					"name": "Update an envrionment's script token",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\",\n  \"token\": \"<string>\",\n  \"expireDate\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/token_roles/:scriptName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"token_roles",
								":scriptName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name."
								},
								{
									"key": "scriptName",
									"value": "<string>",
									"description": "(Required) Script name."
								}
							]
						},
						"description": "Update a specific environment script token given environment and script names."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\",\n  \"token\": \"<string>\",\n  \"expireDate\": \"<long>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/token_roles/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"token_roles",
										":scriptName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name."
										},
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) Script name."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an environment script token",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/token_roles/:scriptName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"token_roles",
								":scriptName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name."
								},
								{
									"key": "scriptName",
									"value": "<string>",
									"description": "(Required) Script name."
								}
							]
						},
						"description": "Deletes a script token by given environment and script name."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/token_roles/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"token_roles",
										":scriptName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name."
										},
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) Script name."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get system script tokens",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/system/token_roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"token_roles"
							]
						},
						"description": "Returns all system TokenRoles objects"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/token_roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"token_roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"role\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"type\": \"<string>\",\n    \"token\": \"<string>\",\n    \"expireDate\": \"<long>\"\n  },\n  {\n    \"role\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"type\": \"<string>\",\n    \"token\": \"<string>\",\n    \"expireDate\": \"<long>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create a system script token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\",\n  \"token\": \"<string>\",\n  \"expireDate\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/system/token_roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"token_roles"
							]
						},
						"description": "Creates a specified system wide TokenRole and returns a Response object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/token_roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"token_roles"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get system TokenRoles object by script name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/system/token_roles/:scriptName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"token_roles",
								":scriptName"
							],
							"variable": [
								{
									"key": "scriptName",
									"value": "<string>",
									"description": "(Required) Script name."
								}
							]
						},
						"description": "Returns a TokenRoles object for given script name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/token_roles/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"token_roles",
										":scriptName"
									],
									"variable": [
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) Script name."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\",\n  \"token\": \"<string>\",\n  \"expireDate\": \"<long>\"\n}"
						}
					]
				},
				{
					"name": "Update a system script token",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\",\n  \"token\": \"<string>\",\n  \"expireDate\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/system/token_roles/:scriptName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"token_roles",
								":scriptName"
							],
							"variable": [
								{
									"key": "scriptName",
									"value": "<string>",
									"description": "(Required) Script name."
								}
							]
						},
						"description": "Updates a TokenRoles object by given script name and replacement TokenRoles object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/token_roles/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"token_roles",
										":scriptName"
									],
									"variable": [
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) Script name."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a system wide script token",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/system/token_roles/:scriptName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"token_roles",
								":scriptName"
							],
							"variable": [
								{
									"key": "scriptName",
									"value": "<string>",
									"description": "(Required) Script name."
								}
							]
						},
						"description": "Deletes a system wide TokenRoles object by specified script name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/token_roles/:scriptName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"token_roles",
										":scriptName"
									],
									"variable": [
										{
											"key": "scriptName",
											"value": "<string>",
											"description": "(Required) Script name."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Internal script tokens APIs"
		},
		{
			"name": "Commits",
			"item": [
				{
					"name": "get Commits",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/commits?scm=<string>&repo=<string>&startSha=<string>&endSha=<string>&size=<integer>&path=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"commits"
							],
							"query": [
								{
									"key": "scm",
									"value": "<string>"
								},
								{
									"key": "repo",
									"value": "<string>"
								},
								{
									"key": "startSha",
									"value": "<string>"
								},
								{
									"key": "endSha",
									"value": "<string>"
								},
								{
									"key": "size",
									"value": "<integer>"
								},
								{
									"key": "path",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/commits?scm=<string>&repo=<string>&startSha=<string>&endSha=<string>&size=<integer>&path=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"commits"
									],
									"query": [
										{
											"key": "scm",
											"value": "<string>"
										},
										{
											"key": "repo",
											"value": "<string>"
										},
										{
											"key": "startSha",
											"value": "<string>"
										},
										{
											"key": "endSha",
											"value": "<string>"
										},
										{
											"key": "size",
											"value": "<integer>"
										},
										{
											"key": "path",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"sha\": \"<string>\",\n    \"author\": \"<string>\",\n    \"date\": \"<long>\",\n    \"title\": \"<string>\",\n    \"message\": \"<string>\",\n    \"info\": \"<string>\"\n  },\n  {\n    \"sha\": \"<string>\",\n    \"author\": \"<string>\",\n    \"date\": \"<long>\",\n    \"title\": \"<string>\",\n    \"message\": \"<string>\",\n    \"info\": \"<string>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get commit infos",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/commits/:scm/:repo/:sha",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"commits",
								":scm",
								":repo",
								":sha"
							],
							"variable": [
								{
									"key": "scm",
									"value": "<string>",
									"description": "(Required) Commit's scm type, either github or phabricator"
								},
								{
									"key": "repo",
									"value": "<string>",
									"description": "(Required) Commit's repo"
								},
								{
									"key": "sha",
									"value": "<string>",
									"description": "(Required) Commit SHA"
								}
							]
						},
						"description": "Returns a commit object given a repo and commit sha"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/commits/:scm/:repo/:sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"commits",
										":scm",
										":repo",
										":sha"
									],
									"variable": [
										{
											"key": "scm",
											"value": "<string>",
											"description": "(Required) Commit's scm type, either github or phabricator"
										},
										{
											"key": "repo",
											"value": "<string>",
											"description": "(Required) Commit's repo"
										},
										{
											"key": "sha",
											"value": "<string>",
											"description": "(Required) Commit SHA"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"sha\": \"<string>\",\n  \"author\": \"<string>\",\n  \"date\": \"<long>\",\n  \"title\": \"<string>\",\n  \"message\": \"<string>\",\n  \"info\": \"<string>\"\n}"
						}
					]
				}
			],
			"description": "Commit info APIs"
		},
		{
			"name": "Environments",
			"item": [
				{
					"name": "Get all environment objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs?envName=<string>&groupName=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs"
							],
							"query": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "groupName",
									"value": "<string>"
								}
							]
						},
						"description": "Returns a list of environment objects related to the given environment name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs?envName=<string>&groupName=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs"
									],
									"query": [
										{
											"key": "envName",
											"value": "<string>"
										},
										{
											"key": "groupName",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"envName\": \"<string>\",\n    \"stageName\": \"<string>\",\n    \"envState\": \"<string>\",\n    \"description\": \"<string>\",\n    \"buildName\": \"<string>\",\n    \"branch\": \"<string>\",\n    \"chatroom\": \"<string>\",\n    \"deployId\": \"<string>\",\n    \"deployType\": \"<string>\",\n    \"maxParallel\": \"<integer>\",\n    \"priority\": \"<string>\",\n    \"systemPriority\": \"<integer>\",\n    \"stuckThreshold\": \"<integer>\",\n    \"successThreshold\": \"<integer>\",\n    \"advancedConfigId\": \"<string>\",\n    \"scriptConfigId\": \"<string>\",\n    \"lastOperator\": \"<string>\",\n    \"lastUpdate\": \"<long>\",\n    \"acceptanceType\": \"<string>\",\n    \"emailRecipients\": \"<string>\",\n    \"notifyAuthors\": false,\n    \"watchRecipients\": \"<string>\",\n    \"metricsConfigId\": \"<string>\",\n    \"alarmConfigId\": \"<string>\",\n    \"webhooksConfigId\": \"<string>\",\n    \"maxDeployNum\": \"<integer>\",\n    \"maxDeployDay\": \"<integer>\",\n    \"isDocker\": false,\n    \"maxParallelPct\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"clusterName\": \"<string>\",\n    \"maxParallelRp\": \"<integer>\",\n    \"overridePolicy\": \"<string>\",\n    \"scheduleId\": \"<string>\",\n    \"deployConstraintId\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"allowPrivateBuild\": false,\n    \"ensureTrustedBuild\": false,\n    \"stageType\": \"<string>\",\n    \"isSOX\": false\n  },\n  {\n    \"id\": \"<string>\",\n    \"envName\": \"<string>\",\n    \"stageName\": \"<string>\",\n    \"envState\": \"<string>\",\n    \"description\": \"<string>\",\n    \"buildName\": \"<string>\",\n    \"branch\": \"<string>\",\n    \"chatroom\": \"<string>\",\n    \"deployId\": \"<string>\",\n    \"deployType\": \"<string>\",\n    \"maxParallel\": \"<integer>\",\n    \"priority\": \"<string>\",\n    \"systemPriority\": \"<integer>\",\n    \"stuckThreshold\": \"<integer>\",\n    \"successThreshold\": \"<integer>\",\n    \"advancedConfigId\": \"<string>\",\n    \"scriptConfigId\": \"<string>\",\n    \"lastOperator\": \"<string>\",\n    \"lastUpdate\": \"<long>\",\n    \"acceptanceType\": \"<string>\",\n    \"emailRecipients\": \"<string>\",\n    \"notifyAuthors\": false,\n    \"watchRecipients\": \"<string>\",\n    \"metricsConfigId\": \"<string>\",\n    \"alarmConfigId\": \"<string>\",\n    \"webhooksConfigId\": \"<string>\",\n    \"maxDeployNum\": \"<integer>\",\n    \"maxDeployDay\": \"<integer>\",\n    \"isDocker\": false,\n    \"maxParallelPct\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"clusterName\": \"<string>\",\n    \"maxParallelRp\": \"<integer>\",\n    \"overridePolicy\": \"<string>\",\n    \"scheduleId\": \"<string>\",\n    \"deployConstraintId\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"allowPrivateBuild\": false,\n    \"ensureTrustedBuild\": false,\n    \"stageType\": \"<string>\",\n    \"isSOX\": false\n  }\n]"
						}
					]
				},
				{
					"name": "Create environment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"envName\": \"<string>\",\n  \"stageName\": \"<string>\",\n  \"envState\": \"<string>\",\n  \"description\": \"<string>\",\n  \"buildName\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"chatroom\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployType\": \"<string>\",\n  \"maxParallel\": \"<integer>\",\n  \"priority\": \"<string>\",\n  \"systemPriority\": \"<integer>\",\n  \"stuckThreshold\": \"<integer>\",\n  \"successThreshold\": \"<integer>\",\n  \"advancedConfigId\": \"<string>\",\n  \"scriptConfigId\": \"<string>\",\n  \"lastOperator\": \"<string>\",\n  \"lastUpdate\": \"<long>\",\n  \"acceptanceType\": \"<string>\",\n  \"emailRecipients\": \"<string>\",\n  \"notifyAuthors\": false,\n  \"watchRecipients\": \"<string>\",\n  \"metricsConfigId\": \"<string>\",\n  \"alarmConfigId\": \"<string>\",\n  \"webhooksConfigId\": \"<string>\",\n  \"maxDeployNum\": \"<integer>\",\n  \"maxDeployDay\": \"<integer>\",\n  \"isDocker\": false,\n  \"maxParallelPct\": \"<integer>\",\n  \"state\": \"<string>\",\n  \"clusterName\": \"<string>\",\n  \"maxParallelRp\": \"<integer>\",\n  \"overridePolicy\": \"<string>\",\n  \"scheduleId\": \"<string>\",\n  \"deployConstraintId\": \"<string>\",\n  \"externalId\": \"<string>\",\n  \"allowPrivateBuild\": false,\n  \"ensureTrustedBuild\": false,\n  \"stageType\": \"<string>\",\n  \"isSOX\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs"
							]
						},
						"description": "Creates a new environment given an environment object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"envName\": \"<string>\",\n  \"stageName\": \"<string>\",\n  \"envState\": \"<string>\",\n  \"description\": \"<string>\",\n  \"buildName\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"chatroom\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployType\": \"<string>\",\n  \"maxParallel\": \"<integer>\",\n  \"priority\": \"<string>\",\n  \"systemPriority\": \"<integer>\",\n  \"stuckThreshold\": \"<integer>\",\n  \"successThreshold\": \"<integer>\",\n  \"advancedConfigId\": \"<string>\",\n  \"scriptConfigId\": \"<string>\",\n  \"lastOperator\": \"<string>\",\n  \"lastUpdate\": \"<long>\",\n  \"acceptanceType\": \"<string>\",\n  \"emailRecipients\": \"<string>\",\n  \"notifyAuthors\": false,\n  \"watchRecipients\": \"<string>\",\n  \"metricsConfigId\": \"<string>\",\n  \"alarmConfigId\": \"<string>\",\n  \"webhooksConfigId\": \"<string>\",\n  \"maxDeployNum\": \"<integer>\",\n  \"maxDeployDay\": \"<integer>\",\n  \"isDocker\": false,\n  \"maxParallelPct\": \"<integer>\",\n  \"state\": \"<string>\",\n  \"clusterName\": \"<string>\",\n  \"maxParallelRp\": \"<integer>\",\n  \"overridePolicy\": \"<string>\",\n  \"scheduleId\": \"<string>\",\n  \"deployConstraintId\": \"<string>\",\n  \"externalId\": \"<string>\",\n  \"allowPrivateBuild\": false,\n  \"ensureTrustedBuild\": false,\n  \"stageType\": \"<string>\",\n  \"isSOX\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "action",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/actions?actionType=<string>&description=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								"actions"
							],
							"query": [
								{
									"key": "actionType",
									"value": "<string>"
								},
								{
									"key": "description",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/actions?actionType=<string>&description=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										"actions"
									],
									"query": [
										{
											"key": "actionType",
											"value": "<string>"
										},
										{
											"key": "description",
											"value": "<string>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Ids",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/ids",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								"ids"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										"ids"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
						}
					]
				},
				{
					"name": "get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/names?nameFilter=<string>&pageIndex=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								"names"
							],
							"query": [
								{
									"key": "nameFilter",
									"value": "<string>"
								},
								{
									"key": "pageIndex",
									"value": "<integer>"
								},
								{
									"key": "pageSize",
									"value": "<integer>"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/names?nameFilter=<string>&pageIndex=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										"names"
									],
									"query": [
										{
											"key": "nameFilter",
											"value": "<string>"
										},
										{
											"key": "pageIndex",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
						}
					]
				},
				{
					"name": "Get all sidecar environment objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/sidecars",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								"sidecars"
							]
						},
						"description": "Returns a list of sidecar environment objects"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/sidecars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										"sidecars"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"envName\": \"<string>\",\n    \"stageName\": \"<string>\",\n    \"envState\": \"<string>\",\n    \"description\": \"<string>\",\n    \"buildName\": \"<string>\",\n    \"branch\": \"<string>\",\n    \"chatroom\": \"<string>\",\n    \"deployId\": \"<string>\",\n    \"deployType\": \"<string>\",\n    \"maxParallel\": \"<integer>\",\n    \"priority\": \"<string>\",\n    \"systemPriority\": \"<integer>\",\n    \"stuckThreshold\": \"<integer>\",\n    \"successThreshold\": \"<integer>\",\n    \"advancedConfigId\": \"<string>\",\n    \"scriptConfigId\": \"<string>\",\n    \"lastOperator\": \"<string>\",\n    \"lastUpdate\": \"<long>\",\n    \"acceptanceType\": \"<string>\",\n    \"emailRecipients\": \"<string>\",\n    \"notifyAuthors\": false,\n    \"watchRecipients\": \"<string>\",\n    \"metricsConfigId\": \"<string>\",\n    \"alarmConfigId\": \"<string>\",\n    \"webhooksConfigId\": \"<string>\",\n    \"maxDeployNum\": \"<integer>\",\n    \"maxDeployDay\": \"<integer>\",\n    \"isDocker\": false,\n    \"maxParallelPct\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"clusterName\": \"<string>\",\n    \"maxParallelRp\": \"<integer>\",\n    \"overridePolicy\": \"<string>\",\n    \"scheduleId\": \"<string>\",\n    \"deployConstraintId\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"allowPrivateBuild\": false,\n    \"ensureTrustedBuild\": false,\n    \"stageType\": \"<string>\",\n    \"isSOX\": false\n  },\n  {\n    \"id\": \"<string>\",\n    \"envName\": \"<string>\",\n    \"stageName\": \"<string>\",\n    \"envState\": \"<string>\",\n    \"description\": \"<string>\",\n    \"buildName\": \"<string>\",\n    \"branch\": \"<string>\",\n    \"chatroom\": \"<string>\",\n    \"deployId\": \"<string>\",\n    \"deployType\": \"<string>\",\n    \"maxParallel\": \"<integer>\",\n    \"priority\": \"<string>\",\n    \"systemPriority\": \"<integer>\",\n    \"stuckThreshold\": \"<integer>\",\n    \"successThreshold\": \"<integer>\",\n    \"advancedConfigId\": \"<string>\",\n    \"scriptConfigId\": \"<string>\",\n    \"lastOperator\": \"<string>\",\n    \"lastUpdate\": \"<long>\",\n    \"acceptanceType\": \"<string>\",\n    \"emailRecipients\": \"<string>\",\n    \"notifyAuthors\": false,\n    \"watchRecipients\": \"<string>\",\n    \"metricsConfigId\": \"<string>\",\n    \"alarmConfigId\": \"<string>\",\n    \"webhooksConfigId\": \"<string>\",\n    \"maxDeployNum\": \"<integer>\",\n    \"maxDeployDay\": \"<integer>\",\n    \"isDocker\": false,\n    \"maxParallelPct\": \"<integer>\",\n    \"state\": \"<string>\",\n    \"clusterName\": \"<string>\",\n    \"maxParallelRp\": \"<integer>\",\n    \"overridePolicy\": \"<string>\",\n    \"scheduleId\": \"<string>\",\n    \"deployConstraintId\": \"<string>\",\n    \"externalId\": \"<string>\",\n    \"allowPrivateBuild\": false,\n    \"ensureTrustedBuild\": false,\n    \"stageType\": \"<string>\",\n    \"isSOX\": false\n  }\n]"
						}
					]
				},
				{
					"name": "Get an environment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Returns an environment object given environment and stage names"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"envName\": \"<string>\",\n  \"stageName\": \"<string>\",\n  \"envState\": \"<string>\",\n  \"description\": \"<string>\",\n  \"buildName\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"chatroom\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployType\": \"<string>\",\n  \"maxParallel\": \"<integer>\",\n  \"priority\": \"<string>\",\n  \"systemPriority\": \"<integer>\",\n  \"stuckThreshold\": \"<integer>\",\n  \"successThreshold\": \"<integer>\",\n  \"advancedConfigId\": \"<string>\",\n  \"scriptConfigId\": \"<string>\",\n  \"lastOperator\": \"<string>\",\n  \"lastUpdate\": \"<long>\",\n  \"acceptanceType\": \"<string>\",\n  \"emailRecipients\": \"<string>\",\n  \"notifyAuthors\": false,\n  \"watchRecipients\": \"<string>\",\n  \"metricsConfigId\": \"<string>\",\n  \"alarmConfigId\": \"<string>\",\n  \"webhooksConfigId\": \"<string>\",\n  \"maxDeployNum\": \"<integer>\",\n  \"maxDeployDay\": \"<integer>\",\n  \"isDocker\": false,\n  \"maxParallelPct\": \"<integer>\",\n  \"state\": \"<string>\",\n  \"clusterName\": \"<string>\",\n  \"maxParallelRp\": \"<integer>\",\n  \"overridePolicy\": \"<string>\",\n  \"scheduleId\": \"<string>\",\n  \"deployConstraintId\": \"<string>\",\n  \"externalId\": \"<string>\",\n  \"allowPrivateBuild\": false,\n  \"ensureTrustedBuild\": false,\n  \"stageType\": \"<string>\",\n  \"isSOX\": false\n}"
						}
					]
				},
				{
					"name": "Update an environment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"envName\": \"<string>\",\n  \"stageName\": \"<string>\",\n  \"envState\": \"<string>\",\n  \"description\": \"<string>\",\n  \"buildName\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"chatroom\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployType\": \"<string>\",\n  \"maxParallel\": \"<integer>\",\n  \"priority\": \"<string>\",\n  \"systemPriority\": \"<integer>\",\n  \"stuckThreshold\": \"<integer>\",\n  \"successThreshold\": \"<integer>\",\n  \"advancedConfigId\": \"<string>\",\n  \"scriptConfigId\": \"<string>\",\n  \"lastOperator\": \"<string>\",\n  \"lastUpdate\": \"<long>\",\n  \"acceptanceType\": \"<string>\",\n  \"emailRecipients\": \"<string>\",\n  \"notifyAuthors\": false,\n  \"watchRecipients\": \"<string>\",\n  \"metricsConfigId\": \"<string>\",\n  \"alarmConfigId\": \"<string>\",\n  \"webhooksConfigId\": \"<string>\",\n  \"maxDeployNum\": \"<integer>\",\n  \"maxDeployDay\": \"<integer>\",\n  \"isDocker\": false,\n  \"maxParallelPct\": \"<integer>\",\n  \"state\": \"<string>\",\n  \"clusterName\": \"<string>\",\n  \"maxParallelRp\": \"<integer>\",\n  \"overridePolicy\": \"<string>\",\n  \"scheduleId\": \"<string>\",\n  \"deployConstraintId\": \"<string>\",\n  \"externalId\": \"<string>\",\n  \"allowPrivateBuild\": false,\n  \"ensureTrustedBuild\": false,\n  \"stageType\": \"<string>\",\n  \"isSOX\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Update an environment given environment and stage names with a environment object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"envName\": \"<string>\",\n  \"stageName\": \"<string>\",\n  \"envState\": \"<string>\",\n  \"description\": \"<string>\",\n  \"buildName\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"chatroom\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployType\": \"<string>\",\n  \"maxParallel\": \"<integer>\",\n  \"priority\": \"<string>\",\n  \"systemPriority\": \"<integer>\",\n  \"stuckThreshold\": \"<integer>\",\n  \"successThreshold\": \"<integer>\",\n  \"advancedConfigId\": \"<string>\",\n  \"scriptConfigId\": \"<string>\",\n  \"lastOperator\": \"<string>\",\n  \"lastUpdate\": \"<long>\",\n  \"acceptanceType\": \"<string>\",\n  \"emailRecipients\": \"<string>\",\n  \"notifyAuthors\": false,\n  \"watchRecipients\": \"<string>\",\n  \"metricsConfigId\": \"<string>\",\n  \"alarmConfigId\": \"<string>\",\n  \"webhooksConfigId\": \"<string>\",\n  \"maxDeployNum\": \"<integer>\",\n  \"maxDeployDay\": \"<integer>\",\n  \"isDocker\": false,\n  \"maxParallelPct\": \"<integer>\",\n  \"state\": \"<string>\",\n  \"clusterName\": \"<string>\",\n  \"maxParallelRp\": \"<integer>\",\n  \"overridePolicy\": \"<string>\",\n  \"scheduleId\": \"<string>\",\n  \"deployConstraintId\": \"<string>\",\n  \"externalId\": \"<string>\",\n  \"allowPrivateBuild\": false,\n  \"ensureTrustedBuild\": false,\n  \"stageType\": \"<string>\",\n  \"isSOX\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an environment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Deletes an environment given a environment and stage names"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "action",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/actions?actionType=<string>&description=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"actions"
							],
							"query": [
								{
									"key": "actionType",
									"value": "<string>"
								},
								{
									"key": "description",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/actions?actionType=<string>&description=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"actions"
									],
									"query": [
										{
											"key": "actionType",
											"value": "<string>"
										},
										{
											"key": "description",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get agent configs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agent_configs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"agent_configs"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Returns a name,value map of environment agent configs given an environment name and stage name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agent_configs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"agent_configs"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"commodof\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update agent configs",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"commodof\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agent_configs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"agent_configs"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Updates environment agent configs given an environment name and stage name with a map of name,value agent configs"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commodof\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agent_configs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"agent_configs"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the capacities for Group and hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/capacity?capacityType=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"capacity"
							],
							"query": [
								{
									"key": "capacityType",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Get the capacities for Group and hosts"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/capacity?capacityType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"capacity"
									],
									"query": [
										{
											"key": "capacityType",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
						}
					]
				},
				{
					"name": "Create the capacities for Group and hosts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"<string>\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/capacity?capacityType=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"capacity"
							],
							"query": [
								{
									"key": "capacityType",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Create the capacities for Group and hosts"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/capacity?capacityType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"capacity"
									],
									"query": [
										{
											"key": "capacityType",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update the capacities for Group and hosts",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/capacity?capacityType=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"capacity"
							],
							"query": [
								{
									"key": "capacityType",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Update the capacities for Group and hosts"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/capacity?capacityType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"capacity"
									],
									"query": [
										{
											"key": "capacityType",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete the capacities for Group and hosts",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"<string>\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/capacity?capacityType=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"capacity"
							],
							"query": [
								{
									"key": "capacityType",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete the capacities for Group and hosts"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/capacity?capacityType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"capacity"
									],
									"query": [
										{
											"key": "capacityType",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Sets the external_id on a stage",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"<string>\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/external_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"external_id"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Sets the external_id column on a stage given the environment and stage names"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"<string>\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/external_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"external_id"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"envName\": \"<string>\",\n  \"stageName\": \"<string>\",\n  \"envState\": \"<string>\",\n  \"description\": \"<string>\",\n  \"buildName\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"chatroom\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployType\": \"<string>\",\n  \"maxParallel\": \"<integer>\",\n  \"priority\": \"<string>\",\n  \"systemPriority\": \"<integer>\",\n  \"stuckThreshold\": \"<integer>\",\n  \"successThreshold\": \"<integer>\",\n  \"advancedConfigId\": \"<string>\",\n  \"scriptConfigId\": \"<string>\",\n  \"lastOperator\": \"<string>\",\n  \"lastUpdate\": \"<long>\",\n  \"acceptanceType\": \"<string>\",\n  \"emailRecipients\": \"<string>\",\n  \"notifyAuthors\": false,\n  \"watchRecipients\": \"<string>\",\n  \"metricsConfigId\": \"<string>\",\n  \"alarmConfigId\": \"<string>\",\n  \"webhooksConfigId\": \"<string>\",\n  \"maxDeployNum\": \"<integer>\",\n  \"maxDeployDay\": \"<integer>\",\n  \"isDocker\": false,\n  \"maxParallelPct\": \"<integer>\",\n  \"state\": \"<string>\",\n  \"clusterName\": \"<string>\",\n  \"maxParallelRp\": \"<integer>\",\n  \"overridePolicy\": \"<string>\",\n  \"scheduleId\": \"<string>\",\n  \"deployConstraintId\": \"<string>\",\n  \"externalId\": \"<string>\",\n  \"allowPrivateBuild\": false,\n  \"ensureTrustedBuild\": false,\n  \"stageType\": \"<string>\",\n  \"isSOX\": false\n}"
						}
					]
				},
				{
					"name": "Get the config history for the environment",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/history?pageIndex=<integer>&pageSize=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"history"
							],
							"query": [
								{
									"key": "pageIndex",
									"value": "<integer>"
								},
								{
									"key": "pageSize",
									"value": "<integer>"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Get the config history for the environment"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/history?pageIndex=<integer>&pageSize=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"history"
									],
									"query": [
										{
											"key": "pageIndex",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"changeId\": \"<string>\",\n    \"createTime\": \"<long>\",\n    \"operator\": \"<string>\",\n    \"type\": \"<string>\",\n    \"configChange\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"changeId\": \"<string>\",\n    \"createTime\": \"<long>\",\n    \"operator\": \"<string>\",\n    \"type\": \"<string>\",\n    \"configChange\": \"<string>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get environment metrics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"metrics"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Returns a list of MetricsConfig object containing details for environment metrics gauges given an environment name and stage name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"metrics"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"title\": \"<string>\",\n    \"url\": \"<string>\",\n    \"specs\": [\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"title\": \"<string>\",\n    \"url\": \"<string>\",\n    \"specs\": [\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      }\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "Update environment metrics",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"title\": \"<string>\",\n    \"url\": \"<string>\",\n    \"specs\": [\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"title\": \"<string>\",\n    \"url\": \"<string>\",\n    \"specs\": [\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      }\n    ]\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"metrics"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Updates an environment's metrics configs given an environment name, stage name, and list of MetricsConfig objects to update with"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"title\": \"<string>\",\n    \"url\": \"<string>\",\n    \"specs\": [\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      }\n    ]\n  },\n  {\n    \"title\": \"<string>\",\n    \"url\": \"<string>\",\n    \"specs\": [\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      },\n      {\n        \"min\": \"<double>\",\n        \"max\": \"<double>\",\n        \"color\": \"<string>\"\n      }\n    ]\n  }\n]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"metrics"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get promote info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/promotes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"promotes"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Returns a promote info object given environment and stage names"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/promotes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"promotes"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"<string>\",\n  \"schedule\": \"<string>\",\n  \"delay\": \"<integer>\",\n  \"envId\": \"<string>\",\n  \"lastOperator\": \"<string>\",\n  \"lastUpdate\": \"<long>\",\n  \"predStage\": \"<string>\",\n  \"queueSize\": \"<integer>\",\n  \"disablePolicy\": \"<string>\",\n  \"failPolicy\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update promote info",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"type\": \"<string>\",\n  \"schedule\": \"<string>\",\n  \"delay\": \"<integer>\",\n  \"envId\": \"<string>\",\n  \"lastOperator\": \"<string>\",\n  \"lastUpdate\": \"<long>\",\n  \"predStage\": \"<string>\",\n  \"queueSize\": \"<integer>\",\n  \"disablePolicy\": \"<string>\",\n  \"failPolicy\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/promotes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"promotes"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Updates promote info given environment and stage names by given promote info object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"type\": \"<string>\",\n  \"schedule\": \"<string>\",\n  \"delay\": \"<integer>\",\n  \"envId\": \"<string>\",\n  \"lastOperator\": \"<string>\",\n  \"lastUpdate\": \"<long>\",\n  \"predStage\": \"<string>\",\n  \"queueSize\": \"<integer>\",\n  \"disablePolicy\": \"<string>\",\n  \"failPolicy\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/promotes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"promotes"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get script configs",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/script_configs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"script_configs"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Returns name value pairs of script configs for given environment and stage names"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/script_configs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"script_configs"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"commodof\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update script configs",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"commodof\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/script_configs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"script_configs"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Updates script configs given environment and stage names with given name:value map of new script configs"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"commodof\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/script_configs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"script_configs"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"commodof\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Get webhooks object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/web_hooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"web_hooks"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Returns a pre/post webhooks object by given environment and stage names"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/web_hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"web_hooks"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"preDeployHooks\": [\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    },\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    }\n  ],\n  \"postDeployHooks\": [\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    },\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Update webhooks",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"preDeployHooks\": [\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    },\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    }\n  ],\n  \"postDeployHooks\": [\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    },\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/web_hooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"web_hooks"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Updates pre/deploy webhooks by given environment and stage names with given webhooks object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"preDeployHooks\": [\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    },\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    }\n  ],\n  \"postDeployHooks\": [\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    },\n    {\n      \"method\": \"<string>\",\n      \"url\": \"<string>\",\n      \"version\": \"<string>\",\n      \"headers\": \"<string>\",\n      \"body\": \"<string>\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/web_hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"web_hooks"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get environment object",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) Environment id"
								}
							]
						},
						"description": "Returns an environment object given an environment id"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) Environment id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"envName\": \"<string>\",\n  \"stageName\": \"<string>\",\n  \"envState\": \"<string>\",\n  \"description\": \"<string>\",\n  \"buildName\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"chatroom\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployType\": \"<string>\",\n  \"maxParallel\": \"<integer>\",\n  \"priority\": \"<string>\",\n  \"systemPriority\": \"<integer>\",\n  \"stuckThreshold\": \"<integer>\",\n  \"successThreshold\": \"<integer>\",\n  \"advancedConfigId\": \"<string>\",\n  \"scriptConfigId\": \"<string>\",\n  \"lastOperator\": \"<string>\",\n  \"lastUpdate\": \"<long>\",\n  \"acceptanceType\": \"<string>\",\n  \"emailRecipients\": \"<string>\",\n  \"notifyAuthors\": false,\n  \"watchRecipients\": \"<string>\",\n  \"metricsConfigId\": \"<string>\",\n  \"alarmConfigId\": \"<string>\",\n  \"webhooksConfigId\": \"<string>\",\n  \"maxDeployNum\": \"<integer>\",\n  \"maxDeployDay\": \"<integer>\",\n  \"isDocker\": false,\n  \"maxParallelPct\": \"<integer>\",\n  \"state\": \"<string>\",\n  \"clusterName\": \"<string>\",\n  \"maxParallelRp\": \"<integer>\",\n  \"overridePolicy\": \"<string>\",\n  \"scheduleId\": \"<string>\",\n  \"deployConstraintId\": \"<string>\",\n  \"externalId\": \"<string>\",\n  \"allowPrivateBuild\": false,\n  \"ensureTrustedBuild\": false,\n  \"stageType\": \"<string>\",\n  \"isSOX\": false\n}"
						}
					]
				}
			],
			"description": "Environment info APIs"
		},
		{
			"name": "Deploy Constraints",
			"item": [
				{
					"name": "Get deploy constraint info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploy_constraint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"deploy_constraint"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns a deploy constraint object given a constraint id"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploy_constraint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"deploy_constraint"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"constraintKey\": \"<string>\",\n  \"maxParallel\": \"<long>\",\n  \"constraintType\": \"<string>\",\n  \"state\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdate\": \"<long>\"\n}"
						}
					]
				},
				{
					"name": "update",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"constraintKey\": \"<string>\",\n  \"maxParallel\": \"<long>\",\n  \"constraintType\": \"<string>\",\n  \"state\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdate\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploy_constraint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"deploy_constraint"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"constraintKey\": \"<string>\",\n  \"maxParallel\": \"<long>\",\n  \"constraintType\": \"<string>\",\n  \"state\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdate\": \"<long>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploy_constraint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"deploy_constraint"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploy_constraint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"deploy_constraint"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/deploy_constraint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"deploy_constraint"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Deploy constraints related APIs"
		},
		{
			"name": "Hosts and Systems",
			"item": [
				{
					"name": "add Host",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hostName\": \"<string>\",\n  \"groupName\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"hostId\": \"<string>\",\n  \"createDate\": \"<long>\",\n  \"lastUpdateDate\": \"<long>\",\n  \"state\": \"<string>\",\n  \"canRetire\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/hosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"hosts"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"hosts"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get By Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/hosts/id/:hostId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"hosts",
								"id",
								":hostId"
							],
							"variable": [
								{
									"key": "hostId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/hosts/id/:hostId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"hosts",
										"id",
										":hostId"
									],
									"variable": [
										{
											"key": "hostId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"hostName\": \"<string>\",\n    \"groupName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"hostId\": \"<string>\",\n    \"createDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"state\": \"<string>\",\n    \"canRetire\": \"<integer>\"\n  },\n  {\n    \"hostName\": \"<string>\",\n    \"groupName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"hostId\": \"<string>\",\n    \"createDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"state\": \"<string>\",\n    \"canRetire\": \"<integer>\"\n  }\n]"
						}
					]
				},
				{
					"name": "update Host",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hostName\": \"<string>\",\n  \"groupName\": \"<string>\",\n  \"ip\": \"<string>\",\n  \"hostId\": \"<string>\",\n  \"createDate\": \"<long>\",\n  \"lastUpdateDate\": \"<long>\",\n  \"state\": \"<string>\",\n  \"canRetire\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/hosts/:hostId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"hosts",
								":hostId"
							],
							"variable": [
								{
									"key": "hostId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/hosts/:hostId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"hosts",
										":hostId"
									],
									"variable": [
										{
											"key": "hostId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "stop Host",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/hosts/:hostId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"hosts",
								":hostId"
							],
							"variable": [
								{
									"key": "hostId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/hosts/:hostId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"hosts",
										":hostId"
									],
									"variable": [
										{
											"key": "hostId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get host info objects by host name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/hosts/:hostName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"hosts",
								":hostName"
							],
							"variable": [
								{
									"key": "hostName",
									"value": "<string>",
									"description": "(Required) Host name"
								}
							]
						},
						"description": "Returns a list of host info objects given a host name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/hosts/:hostName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"hosts",
										":hostName"
									],
									"variable": [
										{
											"key": "hostName",
											"value": "<string>",
											"description": "(Required) Host name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"hostName\": \"<string>\",\n    \"groupName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"hostId\": \"<string>\",\n    \"createDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"state\": \"<string>\",\n    \"canRetire\": \"<integer>\"\n  },\n  {\n    \"hostName\": \"<string>\",\n    \"groupName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"hostId\": \"<string>\",\n    \"createDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"state\": \"<string>\",\n    \"canRetire\": \"<integer>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get all host info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/system/get_host/:hostName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"get_host",
								":hostName"
							],
							"variable": [
								{
									"key": "hostName",
									"value": "<string>",
									"description": "(Required) Host name"
								}
							]
						},
						"description": "Returns a list of host info objects given a host name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/get_host/:hostName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"get_host",
										":hostName"
									],
									"variable": [
										{
											"key": "hostName",
											"value": "<string>",
											"description": "(Required) Host name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"hostName\": \"<string>\",\n    \"groupName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"hostId\": \"<string>\",\n    \"createDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"state\": \"<string>\",\n    \"canRetire\": \"<integer>\"\n  },\n  {\n    \"hostName\": \"<string>\",\n    \"groupName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"hostId\": \"<string>\",\n    \"createDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"state\": \"<string>\",\n    \"canRetire\": \"<integer>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Ping operation for agent ",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hostId\": \"<string>\",\n  \"hostName\": \"<string>\",\n  \"hostIp\": \"<string>\",\n  \"autoscalingGroup\": \"<string>\",\n  \"availabilityZone\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"stageType\": \"<string>\",\n  \"groups\": [\n    \"<string>\"\n  ],\n  \"reports\": [\n    {\n      \"deployId\": \"<string>\",\n      \"envId\": \"<string>\",\n      \"deployStage\": \"<string>\",\n      \"agentStatus\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorMessage\": \"<string>\",\n      \"failCount\": \"<integer>\",\n      \"extraInfo\": {\n        \"sit_8_\": \"<string>\"\n      },\n      \"deployAlias\": \"<string>\"\n    },\n    {\n      \"deployId\": \"<string>\",\n      \"envId\": \"<string>\",\n      \"deployStage\": \"<string>\",\n      \"agentStatus\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorMessage\": \"<string>\",\n      \"failCount\": \"<integer>\",\n      \"extraInfo\": {\n        \"laboris7\": \"<string>\"\n      },\n      \"deployAlias\": \"<string>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/system/ping",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"ping"
							]
						},
						"description": "Returns a deploy goal object given a ping request object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/ping",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"ping"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"opCode\": \"<string>\",\n  \"deployGoal\": {\n    \"deployId\": \"<string>\",\n    \"deployType\": \"<string>\",\n    \"envId\": \"<string>\",\n    \"envName\": \"<string>\",\n    \"stageName\": \"<string>\",\n    \"deployStage\": \"<string>\",\n    \"build\": {\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"artifactUrl\": \"<string>\",\n      \"type\": \"<string>\",\n      \"repo\": \"<string>\",\n      \"branch\": \"<string>\",\n      \"commit\": \"<string>\",\n      \"commitShort\": \"<string>\",\n      \"commitInfo\": \"<string>\",\n      \"commitDate\": \"<long>\",\n      \"publishInfo\": \"<string>\",\n      \"publisher\": \"<string>\",\n      \"publishDate\": \"<long>\"\n    },\n    \"deployAlias\": \"<string>\",\n    \"agentConfigs\": {\n      \"occaecat_d63\": \"<string>\",\n      \"voluptate_f81\": \"<string>\"\n    },\n    \"scriptVariables\": {\n      \"laborum_221\": \"<string>\"\n    },\n    \"firstDeploy\": false,\n    \"isDocker\": false\n  }\n}"
						}
					]
				},
				{
					"name": "Get a set of deploy candidates to deploy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hostId\": \"<string>\",\n  \"hostName\": \"<string>\",\n  \"hostIp\": \"<string>\",\n  \"autoscalingGroup\": \"<string>\",\n  \"availabilityZone\": \"<string>\",\n  \"agentVersion\": \"<string>\",\n  \"stageType\": \"<string>\",\n  \"groups\": [\n    \"<string>\"\n  ],\n  \"reports\": [\n    {\n      \"deployId\": \"<string>\",\n      \"envId\": \"<string>\",\n      \"deployStage\": \"<string>\",\n      \"agentStatus\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorMessage\": \"<string>\",\n      \"failCount\": \"<integer>\",\n      \"extraInfo\": {\n        \"cillumed\": \"<string>\",\n        \"quis_7f\": \"<string>\"\n      },\n      \"deployAlias\": \"<string>\"\n    },\n    {\n      \"deployId\": \"<string>\",\n      \"envId\": \"<string>\",\n      \"deployStage\": \"<string>\",\n      \"agentStatus\": \"<string>\",\n      \"errorCode\": \"<integer>\",\n      \"errorMessage\": \"<string>\",\n      \"failCount\": \"<integer>\",\n      \"extraInfo\": {\n        \"ipsum_9f3\": \"<string>\",\n        \"laborumc\": \"<string>\",\n        \"commodo32\": \"<string>\"\n      },\n      \"deployAlias\": \"<string>\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/system/ping/alldeploycandidates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"ping",
								"alldeploycandidates"
							]
						},
						"description": "Returns a list of build bean"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/ping/alldeploycandidates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"ping",
										"alldeploycandidates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"candidates\": [\n    {\n      \"opCode\": \"<string>\",\n      \"deployGoal\": {\n        \"deployId\": \"<string>\",\n        \"deployType\": \"<string>\",\n        \"envId\": \"<string>\",\n        \"envName\": \"<string>\",\n        \"stageName\": \"<string>\",\n        \"deployStage\": \"<string>\",\n        \"build\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"artifactUrl\": \"<string>\",\n          \"type\": \"<string>\",\n          \"repo\": \"<string>\",\n          \"branch\": \"<string>\",\n          \"commit\": \"<string>\",\n          \"commitShort\": \"<string>\",\n          \"commitInfo\": \"<string>\",\n          \"commitDate\": \"<long>\",\n          \"publishInfo\": \"<string>\",\n          \"publisher\": \"<string>\",\n          \"publishDate\": \"<long>\"\n        },\n        \"deployAlias\": \"<string>\",\n        \"agentConfigs\": {\n          \"amet_e3\": \"<string>\",\n          \"exa\": \"<string>\",\n          \"dolor3d\": \"<string>\",\n          \"consequat_a\": \"<string>\",\n          \"ea_c7\": \"<string>\"\n        },\n        \"scriptVariables\": {\n          \"nostrud_7\": \"<string>\",\n          \"commodo_7\": \"<string>\"\n        },\n        \"firstDeploy\": false,\n        \"isDocker\": false\n      }\n    },\n    {\n      \"opCode\": \"<string>\",\n      \"deployGoal\": {\n        \"deployId\": \"<string>\",\n        \"deployType\": \"<string>\",\n        \"envId\": \"<string>\",\n        \"envName\": \"<string>\",\n        \"stageName\": \"<string>\",\n        \"deployStage\": \"<string>\",\n        \"build\": {\n          \"id\": \"<string>\",\n          \"name\": \"<string>\",\n          \"artifactUrl\": \"<string>\",\n          \"type\": \"<string>\",\n          \"repo\": \"<string>\",\n          \"branch\": \"<string>\",\n          \"commit\": \"<string>\",\n          \"commitShort\": \"<string>\",\n          \"commitInfo\": \"<string>\",\n          \"commitDate\": \"<long>\",\n          \"publishInfo\": \"<string>\",\n          \"publisher\": \"<string>\",\n          \"publishDate\": \"<long>\"\n        },\n        \"deployAlias\": \"<string>\",\n        \"agentConfigs\": {\n          \"sed_272\": \"<string>\",\n          \"ea_1_7\": \"<string>\",\n          \"consectetur046\": \"<string>\"\n        },\n        \"scriptVariables\": {\n          \"dolor_d\": \"<string>\"\n        },\n        \"firstDeploy\": false,\n        \"isDocker\": false\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get SCM commit link template",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/system/scm_link_template?scm=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"scm_link_template"
							],
							"query": [
								{
									"key": "scm",
									"value": "<string>"
								}
							]
						},
						"description": "Returns a Source Control Manager specific commit link template."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/scm_link_template?scm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"scm_link_template"
									],
									"query": [
										{
											"key": "scm",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				},
				{
					"name": "Get SCM url",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/system/scm_url?scm=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"scm_url"
							],
							"query": [
								{
									"key": "scm",
									"value": "<string>"
								}
							]
						},
						"description": "Returns a Source Control Manager Url."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/scm_url?scm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"scm_url"
									],
									"query": [
										{
											"key": "scm",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<string>\""
						}
					]
				},
				{
					"name": "Send chat message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"from\": \"<string>\",\n  \"to\": \"<string>\",\n  \"message\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/system/send_chat_message",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"send_chat_message"
							]
						},
						"description": "Sends a chatroom message given a ChatMessageRequest to configured chat client"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"from\": \"<string>\",\n  \"to\": \"<string>\",\n  \"message\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/system/send_chat_message",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"send_chat_message"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Host info APIs"
		},
		{
			"name": "Group Roles",
			"item": [
				{
					"name": "Get all environment group roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/group_roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"group_roles"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns a list of GroupRoles objects for the given environment name."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/group_roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"group_roles"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"role\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"role\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create a group role for an environment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/group_roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"group_roles"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name."
								}
							]
						},
						"description": "Creates a new GroupRoles object for a given environment name."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/group_roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"group_roles"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get group role by group and environment name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/group_roles/:groupName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"group_roles",
								":groupName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "groupName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns a GroupRoles object containing for given group and environment names."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/group_roles/:groupName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"group_roles",
										":groupName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "groupName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update an environment's group role",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/group_roles/:groupName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"group_roles",
								":groupName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "groupName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Updates a GroupRoles object for given group and environment names with given GroupRoles object."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/group_roles/:groupName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"group_roles",
										":groupName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "groupName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Deletes a group role from an environment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/group_roles/:groupName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"group_roles",
								":groupName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "groupName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes a GroupRoles object by given group and environment names."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/group_roles/:groupName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"group_roles",
										":groupName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "groupName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Group Roles related APIs"
		},
		{
			"name": "Builds",
			"item": [
				{
					"name": "get",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/builds?commit=<string>&name=<string>&branch=<string>&pageIndex=<integer>&pageSize=<integer>&before=<long>&after=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"builds"
							],
							"query": [
								{
									"key": "commit",
									"value": "<string>"
								},
								{
									"key": "name",
									"value": "<string>"
								},
								{
									"key": "branch",
									"value": "<string>"
								},
								{
									"key": "pageIndex",
									"value": "<integer>"
								},
								{
									"key": "pageSize",
									"value": "<integer>"
								},
								{
									"key": "before",
									"value": "<long>"
								},
								{
									"key": "after",
									"value": "<long>"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/builds?commit=<string>&name=<string>&branch=<string>&pageIndex=<integer>&pageSize=<integer>&before=<long>&after=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"builds"
									],
									"query": [
										{
											"key": "commit",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "branch",
											"value": "<string>"
										},
										{
											"key": "pageIndex",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "before",
											"value": "<long>"
										},
										{
											"key": "after",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"artifactUrl\": \"<string>\",\n    \"type\": \"<string>\",\n    \"repo\": \"<string>\",\n    \"branch\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"commitShort\": \"<string>\",\n    \"commitInfo\": \"<string>\",\n    \"commitDate\": \"<long>\",\n    \"publishInfo\": \"<string>\",\n    \"publisher\": \"<string>\",\n    \"publishDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"artifactUrl\": \"<string>\",\n    \"type\": \"<string>\",\n    \"repo\": \"<string>\",\n    \"branch\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"commitShort\": \"<string>\",\n    \"commitInfo\": \"<string>\",\n    \"commitDate\": \"<long>\",\n    \"publishInfo\": \"<string>\",\n    \"publisher\": \"<string>\",\n    \"publishDate\": \"<long>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Publish a build",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"artifactUrl\": \"<string>\",\n  \"type\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"commit\": \"<string>\",\n  \"commitShort\": \"<string>\",\n  \"commitInfo\": \"<string>\",\n  \"commitDate\": \"<long>\",\n  \"publishInfo\": \"<string>\",\n  \"publisher\": \"<string>\",\n  \"publishDate\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/builds",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"builds"
							]
						},
						"description": "Publish a build given a build object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"artifactUrl\": \"<string>\",\n  \"type\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"commit\": \"<string>\",\n  \"commitShort\": \"<string>\",\n  \"commitInfo\": \"<string>\",\n  \"commitDate\": \"<long>\",\n  \"publishInfo\": \"<string>\",\n  \"publisher\": \"<string>\",\n  \"publishDate\": \"<long>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/builds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"builds"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get Current Builds With Group Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/builds/current?group=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"builds",
								"current"
							],
							"query": [
								{
									"key": "group",
									"value": "<string>"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/builds/current?group=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"builds",
										"current"
									],
									"query": [
										{
											"key": "group",
											"value": "<string>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"artifactUrl\": \"<string>\",\n    \"type\": \"<string>\",\n    \"repo\": \"<string>\",\n    \"branch\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"commitShort\": \"<string>\",\n    \"commitInfo\": \"<string>\",\n    \"commitDate\": \"<long>\",\n    \"publishInfo\": \"<string>\",\n    \"publisher\": \"<string>\",\n    \"publishDate\": \"<long>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"artifactUrl\": \"<string>\",\n    \"type\": \"<string>\",\n    \"repo\": \"<string>\",\n    \"branch\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"commitShort\": \"<string>\",\n    \"commitInfo\": \"<string>\",\n    \"commitDate\": \"<long>\",\n    \"publishInfo\": \"<string>\",\n    \"publisher\": \"<string>\",\n    \"publishDate\": \"<long>\"\n  }\n]"
						}
					]
				},
				{
					"name": "get Build Names",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/builds/names?filter=<string>&start=<integer>&size=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"builds",
								"names"
							],
							"query": [
								{
									"key": "filter",
									"value": "<string>"
								},
								{
									"key": "start",
									"value": "<integer>"
								},
								{
									"key": "size",
									"value": "<integer>"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/builds/names?filter=<string>&start=<integer>&size=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"builds",
										"names"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>"
										},
										{
											"key": "start",
											"value": "<integer>"
										},
										{
											"key": "size",
											"value": "<integer>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
						}
					]
				},
				{
					"name": "Get branches",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/builds/names/:name/branches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"builds",
								"names",
								":name",
								"branches"
							],
							"variable": [
								{
									"key": "name",
									"value": "<string>",
									"description": "(Required) BUILD name"
								}
							]
						},
						"description": "Returns a list of the repository branches associated with a given build name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/builds/names/:name/branches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"builds",
										"names",
										":name",
										"branches"
									],
									"variable": [
										{
											"key": "name",
											"value": "<string>",
											"description": "(Required) BUILD name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
						}
					]
				},
				{
					"name": "Get build info along with the build tag info for a given build name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/builds/tags?commit=<string>&name=<string>&branch=<string>&pageIndex=<integer>&pageSize=<integer>&before=<long>&after=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"builds",
								"tags"
							],
							"query": [
								{
									"key": "commit",
									"value": "<string>"
								},
								{
									"key": "name",
									"value": "<string>"
								},
								{
									"key": "branch",
									"value": "<string>"
								},
								{
									"key": "pageIndex",
									"value": "<integer>"
								},
								{
									"key": "pageSize",
									"value": "<integer>"
								},
								{
									"key": "before",
									"value": "<long>"
								},
								{
									"key": "after",
									"value": "<long>"
								}
							]
						},
						"description": "Return a bean object containing the build and the build tag"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/builds/tags?commit=<string>&name=<string>&branch=<string>&pageIndex=<integer>&pageSize=<integer>&before=<long>&after=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"builds",
										"tags"
									],
									"query": [
										{
											"key": "commit",
											"value": "<string>"
										},
										{
											"key": "name",
											"value": "<string>"
										},
										{
											"key": "branch",
											"value": "<string>"
										},
										{
											"key": "pageIndex",
											"value": "<integer>"
										},
										{
											"key": "pageSize",
											"value": "<integer>"
										},
										{
											"key": "before",
											"value": "<long>"
										},
										{
											"key": "after",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tag\": {\n    \"id\": \"<string>\",\n    \"value\": \"<string>\",\n    \"targetType\": \"<string>\",\n    \"targetId\": \"<string>\",\n    \"operator\": \"<string>\",\n    \"createdDate\": \"<long>\",\n    \"comments\": \"<string>\",\n    \"metaInfo\": \"<string>\"\n  },\n  \"build\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"artifactUrl\": \"<string>\",\n    \"type\": \"<string>\",\n    \"repo\": \"<string>\",\n    \"branch\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"commitShort\": \"<string>\",\n    \"commitInfo\": \"<string>\",\n    \"commitDate\": \"<long>\",\n    \"publishInfo\": \"<string>\",\n    \"publisher\": \"<string>\",\n    \"publishDate\": \"<long>\"\n  }\n}"
						}
					]
				},
				{
					"name": "Get build info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/builds/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"builds",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) BUILD id"
								}
							]
						},
						"description": "Returns a build object given a build id"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/builds/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"builds",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) BUILD id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"name\": \"<string>\",\n  \"artifactUrl\": \"<string>\",\n  \"type\": \"<string>\",\n  \"repo\": \"<string>\",\n  \"branch\": \"<string>\",\n  \"commit\": \"<string>\",\n  \"commitShort\": \"<string>\",\n  \"commitInfo\": \"<string>\",\n  \"commitDate\": \"<long>\",\n  \"publishInfo\": \"<string>\",\n  \"publisher\": \"<string>\",\n  \"publishDate\": \"<long>\"\n}"
						}
					]
				},
				{
					"name": "Delete a build",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/builds/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"builds",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) BUILD id"
								}
							]
						},
						"description": "Deletes a build given a build id"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/builds/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"builds",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) BUILD id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get build info with its tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/builds/:id/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"builds",
								":id",
								"tags"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) BUILD id"
								}
							]
						},
						"description": "Returns a build object given a build id"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/builds/:id/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"builds",
										":id",
										"tags"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) BUILD id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"tag\": {\n    \"id\": \"<string>\",\n    \"value\": \"<string>\",\n    \"targetType\": \"<string>\",\n    \"targetId\": \"<string>\",\n    \"operator\": \"<string>\",\n    \"createdDate\": \"<long>\",\n    \"comments\": \"<string>\",\n    \"metaInfo\": \"<string>\"\n  },\n  \"build\": {\n    \"id\": \"<string>\",\n    \"name\": \"<string>\",\n    \"artifactUrl\": \"<string>\",\n    \"type\": \"<string>\",\n    \"repo\": \"<string>\",\n    \"branch\": \"<string>\",\n    \"commit\": \"<string>\",\n    \"commitShort\": \"<string>\",\n    \"commitInfo\": \"<string>\",\n    \"commitDate\": \"<long>\",\n    \"publishInfo\": \"<string>\",\n    \"publisher\": \"<string>\",\n    \"publishDate\": \"<long>\"\n  }\n}"
						}
					]
				}
			],
			"description": "BUILD information APIs"
		},
		{
			"name": "User Roles",
			"item": [
				{
					"name": "Get all environment user roles",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/user_roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"user_roles"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name."
								}
							]
						},
						"description": "Returns a list of UserRoles objects for the given environment name."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/user_roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"user_roles"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"role\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"role\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create a user for an environment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/user_roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"user_roles"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name."
								}
							]
						},
						"description": "Creates a new UserRoles object for a given environment name."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/user_roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"user_roles"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get user role by user and environment name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/user_roles/:userName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"user_roles",
								":userName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name."
								},
								{
									"key": "userName",
									"value": "<string>",
									"description": "(Required) User name."
								}
							]
						},
						"description": "Returns a UserRoles object containing for given user and environment names."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/user_roles/:userName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"user_roles",
										":userName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name."
										},
										{
											"key": "userName",
											"value": "<string>",
											"description": "(Required) User name."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update a user's environment role",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/user_roles/:userName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"user_roles",
								":userName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name."
								},
								{
									"key": "userName",
									"value": "<string>",
									"description": "(Required) User name."
								}
							]
						},
						"description": "Updates a UserRoles object for given user and environment names with given UserRoles object."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/user_roles/:userName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"user_roles",
										":userName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name."
										},
										{
											"key": "userName",
											"value": "<string>",
											"description": "(Required) User name."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Deletes a user's roles from an environment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/user_roles/:userName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								"user_roles",
								":userName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Host name."
								},
								{
									"key": "userName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes a UserRoles object by given user and environment names."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/user_roles/:userName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										"user_roles",
										":userName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Host name."
										},
										{
											"key": "userName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all system level user role objects",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/system/user_roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"user_roles"
							]
						},
						"description": "Returns a list of all system level UserRoles objects"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/user_roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"user_roles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"role\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"type\": \"<string>\"\n  },\n  {\n    \"role\": \"<string>\",\n    \"name\": \"<string>\",\n    \"resource\": \"<string>\",\n    \"type\": \"<string>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new system level user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/system/user_roles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"user_roles"
							]
						},
						"description": "Creates a system level user for given UserRoles object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/user_roles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"user_roles"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get system level user role objects by user name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/system/user_roles/:userName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"user_roles",
								":userName"
							],
							"variable": [
								{
									"key": "userName",
									"value": "<string>",
									"description": "(Required) Name of user"
								}
							]
						},
						"description": "Returns a system level UserRoles objects containing info for given user name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/user_roles/:userName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"user_roles",
										":userName"
									],
									"variable": [
										{
											"key": "userName",
											"value": "<string>",
											"description": "(Required) Name of user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Update a system level user's role",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/system/user_roles/:userName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"user_roles",
								":userName"
							],
							"variable": [
								{
									"key": "userName",
									"value": "<string>",
									"description": "(Required) Name of user."
								}
							]
						},
						"description": "Updates a system level user's role given specified user name and replacement UserRoles object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/system/user_roles/:userName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"user_roles",
										":userName"
									],
									"variable": [
										{
											"key": "userName",
											"value": "<string>",
											"description": "(Required) Name of user."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"role\": \"<string>\",\n  \"name\": \"<string>\",\n  \"resource\": \"<string>\",\n  \"type\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete a system level user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/system/user_roles/:userName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"system",
								"user_roles",
								":userName"
							],
							"variable": [
								{
									"key": "userName",
									"value": "<string>",
									"description": "(Required) User name"
								}
							]
						},
						"description": "Deletes a system level user by specified user name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/system/user_roles/:userName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"user_roles",
										":userName"
									],
									"variable": [
										{
											"key": "userName",
											"value": "<string>",
											"description": "(Required) User name"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "User Roles related APIs"
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Create a tag",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"<string>\",\n  \"value\": \"<string>\",\n  \"targetType\": \"<string>\",\n  \"targetId\": \"<string>\",\n  \"operator\": \"<string>\",\n  \"createdDate\": \"<long>\",\n  \"comments\": \"<string>\",\n  \"metaInfo\": \"<string>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tags"
							]
						},
						"description": "Create a tag on an object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"<string>\",\n  \"value\": \"<string>\",\n  \"targetType\": \"<string>\",\n  \"targetId\": \"<string>\",\n  \"operator\": \"<string>\",\n  \"createdDate\": \"<long>\",\n  \"comments\": \"<string>\",\n  \"metaInfo\": \"<string>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tags"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get tags applied on a target id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tags/targets/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tags",
								"targets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Return a list of TagBean objects"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/tags/targets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tags",
										"targets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<object>\",\n  \"<object>\"\n]"
						}
					]
				},
				{
					"name": "Get tags applied on a target id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tags/targets/:id/latest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tags",
								"targets",
								":id",
								"latest"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Return a list of TagBean objects"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/tags/targets/:id/latest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tags",
										"targets",
										":id",
										"latest"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<object>\",\n  \"<object>\"\n]"
						}
					]
				},
				{
					"name": "Get tags with the given value",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tags/values/:value",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tags",
								"values",
								":value"
							],
							"variable": [
								{
									"key": "value",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Return a list of TagBean object with given value"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/tags/values/:value",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tags",
										"values",
										":value"
									],
									"variable": [
										{
											"key": "value",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"<object>\",\n  \"<object>\"\n]"
						}
					]
				},
				{
					"name": "Get tags with a given id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tags/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tags",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Return a TagBean objects"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/tags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": \"<string>\",\n  \"value\": \"<string>\",\n  \"targetType\": \"<string>\",\n  \"targetId\": \"<string>\",\n  \"operator\": \"<string>\",\n  \"createdDate\": \"<long>\",\n  \"comments\": \"<string>\",\n  \"metaInfo\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete a tag",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tags/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tags",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<string>",
									"description": "(Required) tag id"
								}
							]
						},
						"description": "Deletes a build given a tag id"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/tags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"tags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"description": "(Required) tag id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Tagging APIs"
		},
		{
			"name": "Agents",
			"item": [
				{
					"name": "get Count By Env Name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/agents/env/:envId/total",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"agents",
								"env",
								":envId",
								"total"
							],
							"variable": [
								{
									"key": "envId",
									"value": "<string>",
									"description": "(Required) Env Id"
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/agents/env/:envId/total",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"agents",
										"env",
										":envId",
										"total"
									],
									"variable": [
										{
											"key": "envId",
											"value": "<string>",
											"description": "(Required) Env Id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<long>\""
						}
					]
				},
				{
					"name": "get Count Total Hosts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/agents/hostcount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"agents",
								"hostcount"
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/agents/hostcount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"agents",
										"hostcount"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<long>\""
						}
					]
				},
				{
					"name": "get By Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/agents/id/:hostId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"agents",
								"id",
								":hostId"
							],
							"variable": [
								{
									"key": "hostId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/agents/id/:hostId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"agents",
										"id",
										":hostId"
									],
									"variable": [
										{
											"key": "hostId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"hostId\": \"<string>\",\n    \"hostName\": \"<string>\",\n    \"envId\": \"<string>\",\n    \"deployId\": \"<string>\",\n    \"deployStage\": \"<string>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"lastOperator\": \"<string>\",\n    \"lastErrno\": \"<integer>\",\n    \"failCount\": \"<integer>\",\n    \"firstDeploy\": false,\n    \"firstDeployDate\": \"<long>\",\n    \"stageStartDate\": \"<long>\"\n  },\n  {\n    \"hostId\": \"<string>\",\n    \"hostName\": \"<string>\",\n    \"envId\": \"<string>\",\n    \"deployId\": \"<string>\",\n    \"deployStage\": \"<string>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"lastOperator\": \"<string>\",\n    \"lastErrno\": \"<integer>\",\n    \"failCount\": \"<integer>\",\n    \"firstDeploy\": false,\n    \"firstDeployDate\": \"<long>\",\n    \"stageStartDate\": \"<long>\"\n  }\n]"
						}
					]
				},
				{
					"name": "update By Id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hostId\": \"<string>\",\n  \"hostName\": \"<string>\",\n  \"envId\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployStage\": \"<string>\",\n  \"state\": \"<string>\",\n  \"status\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdateDate\": \"<long>\",\n  \"lastOperator\": \"<string>\",\n  \"lastErrno\": \"<integer>\",\n  \"failCount\": \"<integer>\",\n  \"firstDeploy\": false,\n  \"firstDeployDate\": \"<long>\",\n  \"stageStartDate\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/agents/id/:hostId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"agents",
								"id",
								":hostId"
							],
							"variable": [
								{
									"key": "hostId",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hostId\": \"<string>\",\n  \"hostName\": \"<string>\",\n  \"envId\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployStage\": \"<string>\",\n  \"state\": \"<string>\",\n  \"status\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdateDate\": \"<long>\",\n  \"lastOperator\": \"<string>\",\n  \"lastErrno\": \"<integer>\",\n  \"failCount\": \"<integer>\",\n  \"firstDeploy\": false,\n  \"firstDeployDate\": \"<long>\",\n  \"stageStartDate\": \"<long>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/agents/id/:hostId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"agents",
										"id",
										":hostId"
									],
									"variable": [
										{
											"key": "hostId",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Deploy Agent Host Info",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/agents/:hostName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"agents",
								":hostName"
							],
							"variable": [
								{
									"key": "hostName",
									"value": "<string>",
									"description": "(Required) Host name"
								}
							]
						},
						"description": "Returns a list of all the deploy agent objects running on the specified host"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/agents/:hostName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"agents",
										":hostName"
									],
									"variable": [
										{
											"key": "hostName",
											"value": "<string>",
											"description": "(Required) Host name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"hostId\": \"<string>\",\n    \"hostName\": \"<string>\",\n    \"envId\": \"<string>\",\n    \"deployId\": \"<string>\",\n    \"deployStage\": \"<string>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"lastOperator\": \"<string>\",\n    \"lastErrno\": \"<integer>\",\n    \"failCount\": \"<integer>\",\n    \"firstDeploy\": false,\n    \"firstDeployDate\": \"<long>\",\n    \"stageStartDate\": \"<long>\"\n  },\n  {\n    \"hostId\": \"<string>\",\n    \"hostName\": \"<string>\",\n    \"envId\": \"<string>\",\n    \"deployId\": \"<string>\",\n    \"deployStage\": \"<string>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"lastOperator\": \"<string>\",\n    \"lastErrno\": \"<integer>\",\n    \"failCount\": \"<integer>\",\n    \"firstDeploy\": false,\n    \"firstDeployDate\": \"<long>\",\n    \"stageStartDate\": \"<long>\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get deploy agents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agents",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"agents"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Returns a list of all the deploy agent objects for a given environment name and stage name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"agents"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"hostId\": \"<string>\",\n    \"hostName\": \"<string>\",\n    \"envId\": \"<string>\",\n    \"deployId\": \"<string>\",\n    \"deployStage\": \"<string>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"lastOperator\": \"<string>\",\n    \"lastErrno\": \"<integer>\",\n    \"failCount\": \"<integer>\",\n    \"firstDeploy\": false,\n    \"firstDeployDate\": \"<long>\",\n    \"stageStartDate\": \"<long>\"\n  },\n  {\n    \"hostId\": \"<string>\",\n    \"hostName\": \"<string>\",\n    \"envId\": \"<string>\",\n    \"deployId\": \"<string>\",\n    \"deployStage\": \"<string>\",\n    \"state\": \"<string>\",\n    \"status\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"lastOperator\": \"<string>\",\n    \"lastErrno\": \"<integer>\",\n    \"failCount\": \"<integer>\",\n    \"firstDeploy\": false,\n    \"firstDeployDate\": \"<long>\",\n    \"stageStartDate\": \"<long>\"\n  }\n]"
						}
					]
				},
				{
					"name": "count Serving Agents",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agents/count?actionType=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"agents",
								"count"
							],
							"query": [
								{
									"key": "actionType",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agents/count?actionType=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"agents",
										"count"
									],
									"query": [
										{
											"key": "actionType",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"<long>\""
						}
					]
				},
				{
					"name": "Get deploy agent error",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agents/errors/:hostName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"agents",
								"errors",
								":hostName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								},
								{
									"key": "hostName",
									"value": "<string>",
									"description": "(Required) Host name"
								}
							]
						},
						"description": "Returns an AgentError object given an environment name, stage name, and host name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agents/errors/:hostName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"agents",
										"errors",
										":hostName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										},
										{
											"key": "hostName",
											"value": "<string>",
											"description": "(Required) Host name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"hostId\": \"<string>\",\n  \"hostName\": \"<string>\",\n  \"envId\": \"<string>\",\n  \"errorMessage\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Reset failed deploys",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agents/reset_failed_agents/:deployId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"agents",
								"reset_failed_agents",
								":deployId"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								},
								{
									"key": "deployId",
									"value": "<string>",
									"description": "(Required) Deploy id"
								}
							]
						},
						"description": "Resets failing deploys given an environment name, stage name, and deploy id"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agents/reset_failed_agents/:deployId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"agents",
										"reset_failed_agents",
										":deployId"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										},
										{
											"key": "deployId",
											"value": "<string>",
											"description": "(Required) Deploy id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update host agent",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"hostId\": \"<string>\",\n  \"hostName\": \"<string>\",\n  \"envId\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployStage\": \"<string>\",\n  \"state\": \"<string>\",\n  \"status\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdateDate\": \"<long>\",\n  \"lastOperator\": \"<string>\",\n  \"lastErrno\": \"<integer>\",\n  \"failCount\": \"<integer>\",\n  \"firstDeploy\": false,\n  \"firstDeployDate\": \"<long>\",\n  \"stageStartDate\": \"<long>\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agents/:hostId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"agents",
								":hostId"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								},
								{
									"key": "hostId",
									"value": "<string>",
									"description": "(Required) Host id"
								}
							]
						},
						"description": "Updates host agent specified by given environment name, stage name, and host id with given agent object"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"hostId\": \"<string>\",\n  \"hostName\": \"<string>\",\n  \"envId\": \"<string>\",\n  \"deployId\": \"<string>\",\n  \"deployStage\": \"<string>\",\n  \"state\": \"<string>\",\n  \"status\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"lastUpdateDate\": \"<long>\",\n  \"lastOperator\": \"<string>\",\n  \"lastErrno\": \"<integer>\",\n  \"failCount\": \"<integer>\",\n  \"firstDeploy\": false,\n  \"firstDeployDate\": \"<long>\",\n  \"stageStartDate\": \"<long>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/agents/:hostId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"agents",
										":hostId"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										},
										{
											"key": "hostId",
											"value": "<string>",
											"description": "(Required) Host id"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Deploy agent information APIs"
		},
		{
			"name": "Host Tags",
			"item": [],
			"description": "Host Tags related APIs"
		},
		{
			"name": "ExternalAlerts",
			"item": [
				{
					"name": "The alert response",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "0",
									"value": "<"
								},
								{
									"key": "1",
									"value": "s"
								},
								{
									"key": "2",
									"value": "t"
								},
								{
									"key": "3",
									"value": "r"
								},
								{
									"key": "4",
									"value": "i"
								},
								{
									"key": "5",
									"value": "n"
								},
								{
									"key": "6",
									"value": "g"
								},
								{
									"key": "7",
									"value": ">"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/alerts?actionWindow=<integer>&actions=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"alerts"
							],
							"query": [
								{
									"key": "actionWindow",
									"value": "<integer>"
								},
								{
									"key": "actions",
									"value": "<string>"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Return the alert checking result"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "0",
											"value": "<"
										},
										{
											"key": "1",
											"value": "s"
										},
										{
											"key": "2",
											"value": "t"
										},
										{
											"key": "3",
											"value": "r"
										},
										{
											"key": "4",
											"value": "i"
										},
										{
											"key": "5",
											"value": "n"
										},
										{
											"key": "6",
											"value": "g"
										},
										{
											"key": "7",
											"value": ">"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/alerts?actionWindow=<integer>&actions=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"alerts"
									],
									"query": [
										{
											"key": "actionWindow",
											"value": "<integer>"
										},
										{
											"key": "actions",
											"value": "<string>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Hosts",
			"item": [
				{
					"name": "Get hosts for env stage",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/hosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"hosts"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								}
							]
						},
						"description": "Returns a Collections of hosts given an environment and stage"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"hosts"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"hostName\": \"<string>\",\n    \"groupName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"hostId\": \"<string>\",\n    \"createDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"state\": \"<string>\",\n    \"canRetire\": \"<integer>\"\n  },\n  {\n    \"hostName\": \"<string>\",\n    \"groupName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"hostId\": \"<string>\",\n    \"createDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"state\": \"<string>\",\n    \"canRetire\": \"<integer>\"\n  }\n]"
						}
					]
				},
				{
					"name": "stop Service On Host",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/hosts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"hosts"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/hosts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"hosts"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get host details for stage and host name",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/hosts/:hostName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"hosts",
								":hostName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) Environment name"
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) Stage name"
								},
								{
									"key": "hostName",
									"value": "<string>",
									"description": "(Required) Host name"
								}
							]
						},
						"description": "Returns a host given an environment, stage and host name"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/hosts/:hostName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"hosts",
										":hostName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) Environment name"
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) Stage name"
										},
										{
											"key": "hostName",
											"value": "<string>",
											"description": "(Required) Host name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"hostName\": \"<string>\",\n    \"groupName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"hostId\": \"<string>\",\n    \"createDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"state\": \"<string>\",\n    \"canRetire\": \"<integer>\"\n  },\n  {\n    \"hostName\": \"<string>\",\n    \"groupName\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"hostId\": \"<string>\",\n    \"createDate\": \"<long>\",\n    \"lastUpdateDate\": \"<long>\",\n    \"state\": \"<string>\",\n    \"canRetire\": \"<integer>\"\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Hosts Tags",
			"item": [
				{
					"name": "List all the hosts tags",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/host_tags?ec2Tags=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"host_tags"
							],
							"query": [
								{
									"key": "ec2Tags",
									"value": "<boolean>"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns a list the host tags in an environment"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/host_tags?ec2Tags=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"host_tags"
									],
									"query": [
										{
											"key": "ec2Tags",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"hostName\": \"<string>\",\n  \"hostId\": \"<string>\",\n  \"tagName\": \"<string>\",\n  \"tagValue\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "List all the hosts that are tagged with tagName in an environment, and group by tagValue",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/host_tags/:tagName?ec2Tags=<boolean>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"host_tags",
								":tagName"
							],
							"query": [
								{
									"key": "ec2Tags",
									"value": "<boolean>"
								}
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "tagName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns a map group by tagValue and hosts tagged with tagName:tagValue in an environment"
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/host_tags/:tagName?ec2Tags=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"host_tags",
										":tagName"
									],
									"query": [
										{
											"key": "ec2Tags",
											"value": "<boolean>"
										}
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "tagName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"hostName\": \"<string>\",\n  \"hostId\": \"<string>\",\n  \"tagName\": \"<string>\",\n  \"tagValue\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "remove Host Tags",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/host_tags/:tagName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"envs",
								":envName",
								":stageName",
								"host_tags",
								":tagName"
							],
							"variable": [
								{
									"key": "envName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "stageName",
									"value": "<string>",
									"description": "(Required) "
								},
								{
									"key": "tagName",
									"value": "<string>",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/envs/:envName/:stageName/host_tags/:tagName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"envs",
										":envName",
										":stageName",
										"host_tags",
										":tagName"
									],
									"variable": [
										{
											"key": "envName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "stageName",
											"value": "<string>",
											"description": "(Required) "
										},
										{
											"key": "tagName",
											"value": "<string>",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			},
			{
				"key": "value",
				"value": "Token {{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}